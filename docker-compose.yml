version: '3'

services:
  # Redis service
  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"  # Expose Redis on port 6379
    networks:
      - backend

  # Django service
  django:
    build: .  # Build from Dockerfile in current directory
    container_name: django
    command: >
      sh -c "gunicorn chess_django.wsgi:application --bind 0.0.0.0:8000 &
      daphne -b 0.0.0.0 -p 8001 chess_django.asgi:application"
    working_dir: /app/chess_django
    volumes:
      - ./chess_django/db.sqlite3:/app/chess_django/db.sqlite3
    env_file:  # Load .env file
      - .env
    ports:
      - "8000:8000"  # Gunicorn (HTTP)
      - "8001:8001"  # Daphne (WebSockets)
    depends_on:
      - redis
    environment:
      - REDIS_HOST=redis  # Set Redis hostname as environment variable
    networks:
      - backend

  # Celery worker service
  celery:
    build: .
    command: celery -A chess_django worker --pool=prefork --concurrency=2 -l info
    working_dir: /app/chess_django
    volumes:
      - ./chess_django/db.sqlite3:/app/chess_django/db.sqlite3
    depends_on:
      - redis
      - django
    networks:
      - backend

  # Nginx service
  nginx:
    build:
      context: ./nginx  # Path to the directory containing the Nginx Dockerfile and nginx.conf
    container_name: nginx
    volumes:
      - ./chess_django/staticfiles:/app/chess_django/staticfiles  # Mount the static files
      - ./nginx/ssl:/etc/nginx/ssl:ro  # Mount SSL certs as read-only
    ports:
      - "80:80"  # Expose Nginx on port 80
      - "443:443"  # Expose Nginx on port 443
    depends_on:
      - django  # Ensure Django is running before Nginx starts
    networks:
      - backend

networks:
  backend:
    driver: bridge  # Custom network for communication between containers